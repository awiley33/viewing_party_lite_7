---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=api_key&query=Lord%20Of%20The
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.10
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 25 Aug 2023 23:42:41 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=26104
      X-Memc:
      - HIT
      X-Memc-Key:
      - 77d9b32d497735c612ff9334898c80a5
      X-Memc-Age:
      - '755'
      X-Memc-Expires:
      - '27980'
      Etag:
      - W/"bde8a5ceb9f8aaee4dfb2f995d1f33c2"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 52cf696b7d467b009c1bb9273fc4081c.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - ATL58-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - 4fsj9furhWKVZ6UyFkE5QhbrcHy1aAoxxx3Nel6IP8KypdrZxFpTaw==
      Age:
      - '332'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 25 Aug 2023 23:48:13 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=api_key&query=Lord%20Of%20The
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.10
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 25 Aug 2023 23:42:41 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=26104
      X-Memc:
      - HIT
      X-Memc-Key:
      - 77d9b32d497735c612ff9334898c80a5
      X-Memc-Age:
      - '755'
      X-Memc-Expires:
      - '27980'
      Etag:
      - W/"bde8a5ceb9f8aaee4dfb2f995d1f33c2"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 7215ed8d33cf8b90bf39beeb866c1404.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - ATL58-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - fgSp-yReFIqekAzXR3NA_Mly211B2uLZ-IbyE7hpKO5laRjKZ7LhvA==
      Age:
      - '348'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 25 Aug 2023 23:48:29 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=api_key&query=Lord%20Of%20The
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.10
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 25 Aug 2023 23:42:41 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=26104
      X-Memc:
      - HIT
      X-Memc-Key:
      - 77d9b32d497735c612ff9334898c80a5
      X-Memc-Age:
      - '755'
      X-Memc-Expires:
      - '27980'
      Etag:
      - W/"bde8a5ceb9f8aaee4dfb2f995d1f33c2"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 8774711cd9fd32ceec95cdb13439f30c.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - ATL58-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - NBSYgCPXoUtseF2Rpxcv-HIt30yNvP4hcTVsEhZCFvz40zTg0IKidQ==
      Age:
      - '455'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 25 Aug 2023 23:50:16 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=api_key&query=Lord%20Of%20The
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.10
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 25 Aug 2023 23:42:41 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=26104
      X-Memc:
      - HIT
      X-Memc-Key:
      - 77d9b32d497735c612ff9334898c80a5
      X-Memc-Age:
      - '755'
      X-Memc-Expires:
      - '27980'
      Etag:
      - W/"bde8a5ceb9f8aaee4dfb2f995d1f33c2"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 493e292caca329a2b20dbbc4e33d60f2.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - ATL58-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - QvLQF70D0jMjXm-bP9Bl--O-O0HoNJ-EauYgrqXfdWFc_HJ6kwN80A==
      Age:
      - '562'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 25 Aug 2023 23:52:03 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=api_key&query=Lord%20Of%20The
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.10
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 25 Aug 2023 23:42:41 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=26104
      X-Memc:
      - HIT
      X-Memc-Key:
      - 77d9b32d497735c612ff9334898c80a5
      X-Memc-Age:
      - '755'
      X-Memc-Expires:
      - '27980'
      Etag:
      - W/"bde8a5ceb9f8aaee4dfb2f995d1f33c2"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 717259fee28262d19eb04e26675df7a8.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - ATL58-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - hRjrkhA01ugw7BUIqJ2RDKg5Pll6_A-r4DkYzzcpkMHLaBHfWhwT0g==
      Age:
      - '630'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 25 Aug 2023 23:53:11 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=api_key&query=Lord%20Of%20The
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.10
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 25 Aug 2023 23:42:41 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=26104
      X-Memc:
      - HIT
      X-Memc-Key:
      - 77d9b32d497735c612ff9334898c80a5
      X-Memc-Age:
      - '755'
      X-Memc-Expires:
      - '27980'
      Etag:
      - W/"bde8a5ceb9f8aaee4dfb2f995d1f33c2"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 842903c2217128ae7cb417c6c6651412.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - ATL58-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - R33imN30yP1gSfEFTXz0JmbaPpVy4QhqenPa2Wp7dk464cEbiFsvBQ==
      Age:
      - '746'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJwYWdlIjoxLCJyZXN1bHRzIjpbeyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvZzhZeXRuYnkwaElQZnQ1bDU2bWdKdFp5UjFrLmpwZyIsImdlbnJlX2lkcyI6WzI4XSwiaWQiOjk2NTgzOSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiTG9yZCBvZiB0aGUgU3RyZWV0cyIsIm92ZXJ2aWV3IjoiV2hlbiBKYXNvbiBEeXNvbiByZWZ1c2VzIHRvIG1ha2UgaGlzIHByaXplZCBmaWdodGVyIHRocm93IGFuIE1NQSBtYXRjaCwgYSBub3RvcmlvdXMgZ2FuZ3N0ZXIgY29sbGVjdHMgaGlzIGRlYnQgYnkga2lsbGluZyB0aGUgZmlnaHRlciBhbmQga2lkbmFwcGluZyBKYXNvbidzIGRhdWdodGVyLiBOb3cgaGUgbXVzdCB0cmFpbiBhIHByaXNvbmVyIHRvIGVuZHVyZSBmaXZlIGNvbnNlY3V0aXZlIHVuZGVyZ3JvdW5kIGZpZ2h0cyB0byBzYXZlIGhlci4iLCJwb3B1bGFyaXR5IjozOC42NDksInBvc3Rlcl9wYXRoIjoiL245WVdWUVJjMHp3MG53ckZjT2tPcGZmWnhqYy5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDIyLTA0LTIyIiwidGl0bGUiOiJMb3JkIG9mIHRoZSBTdHJlZXRzIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjUuMiwidm90ZV9jb3VudCI6NjR9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3RxajdOS2oxMWtlRnVMelBzQkRNVXEyZE9VTy5qcGciLCJnZW5yZV9pZHMiOlsxMiwxNCwyOF0sImlkIjoxMjAsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBMb3JkIG9mIHRoZSBSaW5nczogVGhlIEZlbGxvd3NoaXAgb2YgdGhlIFJpbmciLCJvdmVydmlldyI6IllvdW5nIGhvYmJpdCBGcm9kbyBCYWdnaW5zLCBhZnRlciBpbmhlcml0aW5nIGEgbXlzdGVyaW91cyByaW5nIGZyb20gaGlzIHVuY2xlIEJpbGJvLCBtdXN0IGxlYXZlIGhpcyBob21lIGluIG9yZGVyIHRvIGtlZXAgaXQgZnJvbSBmYWxsaW5nIGludG8gdGhlIGhhbmRzIG9mIGl0cyBldmlsIGNyZWF0b3IuIEFsb25nIHRoZSB3YXksIGEgZmVsbG93c2hpcCBpcyBmb3JtZWQgdG8gcHJvdGVjdCB0aGUgcmluZ2JlYXJlciBhbmQgbWFrZSBzdXJlIHRoYXQgdGhlIHJpbmcgYXJyaXZlcyBhdCBpdHMgZmluYWwgZGVzdGluYXRpb246IE10LiBEb29tLCB0aGUgb25seSBwbGFjZSB3aGVyZSBpdCBjYW4gYmUgZGVzdHJveWVkLiIsInBvcHVsYXJpdHkiOjk2LjcxNCwicG9zdGVyX3BhdGgiOiIvNm9vbTVRWVEyeVFUTUpJYm52YmtCTDljSG82LmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMDEtMTItMTgiLCJ0aXRsZSI6IlRoZSBMb3JkIG9mIHRoZSBSaW5nczogVGhlIEZlbGxvd3NoaXAgb2YgdGhlIFJpbmciLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6OC40MDEsInZvdGVfY291bnQiOjIzMTM5fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii8ydTd6Ym44RXVkRzZrTGxCelVZcVA4UnlGVTQuanBnIiwiZ2VucmVfaWRzIjpbMTIsMTQsMjhdLCJpZCI6MTIyLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgTG9yZCBvZiB0aGUgUmluZ3M6IFRoZSBSZXR1cm4gb2YgdGhlIEtpbmciLCJvdmVydmlldyI6IkFyYWdvcm4gaXMgcmV2ZWFsZWQgYXMgdGhlIGhlaXIgdG8gdGhlIGFuY2llbnQga2luZ3MgYXMgaGUsIEdhbmRhbGYgYW5kIHRoZSBvdGhlciBtZW1iZXJzIG9mIHRoZSBicm9rZW4gZmVsbG93c2hpcCBzdHJ1Z2dsZSB0byBzYXZlIEdvbmRvciBmcm9tIFNhdXJvbidzIGZvcmNlcy4gTWVhbndoaWxlLCBGcm9kbyBhbmQgU2FtIHRha2UgdGhlIHJpbmcgY2xvc2VyIHRvIHRoZSBoZWFydCBvZiBNb3Jkb3IsIHRoZSBkYXJrIGxvcmQncyByZWFsbS4iLCJwb3B1bGFyaXR5Ijo5OC4yNzYsInBvc3Rlcl9wYXRoIjoiL3JDenBER0xiT29Qd0xqeTNPQW01TlVQT1RyQy5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDAzLTEyLTAxIiwidGl0bGUiOiJUaGUgTG9yZCBvZiB0aGUgUmluZ3M6IFRoZSBSZXR1cm4gb2YgdGhlIEtpbmciLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6OC40NzUsInZvdGVfY291bnQiOjIyMDg2fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9uUzRwaWNPd2oxNUFQS3pKZUJDazZFQmNNRzUuanBnIiwiZ2VucmVfaWRzIjpbMTIsMTQsMjhdLCJpZCI6MTIxLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgTG9yZCBvZiB0aGUgUmluZ3M6IFRoZSBUd28gVG93ZXJzIiwib3ZlcnZpZXciOiJGcm9kbyBhbmQgU2FtIGFyZSB0cmVra2luZyB0byBNb3Jkb3IgdG8gZGVzdHJveSB0aGUgT25lIFJpbmcgb2YgUG93ZXIgd2hpbGUgR2ltbGksIExlZ29sYXMgYW5kIEFyYWdvcm4gc2VhcmNoIGZvciB0aGUgb3JjLWNhcHR1cmVkIE1lcnJ5IGFuZCBQaXBwaW4uIEFsbCBhbG9uZywgbmVmYXJpb3VzIHdpemFyZCBTYXJ1bWFuIGF3YWl0cyB0aGUgRmVsbG93c2hpcCBtZW1iZXJzIGF0IHRoZSBPcnRoYW5jIFRvd2VyIGluIElzZW5nYXJkLiIsInBvcHVsYXJpdHkiOjgxLjA1NCwicG9zdGVyX3BhdGgiOiIvNVZUTjBwUjhnY3FWM0VQVUhIZk1HbkpZTjlMLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMDItMTItMTgiLCJ0aXRsZSI6IlRoZSBMb3JkIG9mIHRoZSBSaW5nczogVGhlIFR3byBUb3dlcnMiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6OC4zODMsInZvdGVfY291bnQiOjIwMTExfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii94OU1jRTFXRktuQUhsdWRpWTd4ZmQ3bW9kREMuanBnIiwiZ2VucmVfaWRzIjpbMTIsMTYsMTRdLCJpZCI6MTIzLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgTG9yZCBvZiB0aGUgUmluZ3MiLCJvdmVydmlldyI6IlRoZSBGZWxsb3dzaGlwIG9mIHRoZSBSaW5nIGVtYmFyayBvbiBhIGpvdXJuZXkgdG8gZGVzdHJveSB0aGUgT25lIFJpbmcgYW5kIGVuZCBTYXVyb24ncyByZWlnbiBvdmVyIE1pZGRsZS1lYXJ0aC4iLCJwb3B1bGFyaXR5IjoyMS4xNzIsInBvc3Rlcl9wYXRoIjoiL2xpVzBtanZUeUxzN1VDdW1hSGh4M1BwVTRWVC5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTc4LTExLTE1IiwidGl0bGUiOiJUaGUgTG9yZCBvZiB0aGUgUmluZ3MiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ni41NDksInZvdGVfY291bnQiOjc2NH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvbWpkZ2JsNHd2MFZsY011ajFqeGdqZDA3YkppLmpwZyIsImdlbnJlX2lkcyI6WzE0LDE2LDM1LDEwNzUxLDEyXSwiaWQiOjI1NTIzLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgR2hvc3Qgb2YgTG9yZCBGYXJxdWFhZCIsIm92ZXJ2aWV3IjoiTG9yZCBGYXJxdWFhZCB3YXMgZWF0ZW4gYnkgdGhlIGRyYWdvbiwgYnV0IGhpcyBnaG9zdCBoYXMgcmV0dXJuZWQsIGFuZCBoZSdzIHN0aWxsIGV2aWwuIFdpdGggdGhlIGhlbHAgb2YgaGlzIGhlbmNobWFuLCBUaGVsb25pb3VzLCBoZSBraWRuYXBzIEZpb25hLiBTaHJlayBhbmQgdGhlIGRvbmtleSBzZXQgb3V0IHRvIHNhdmUgaGVyLCB3aXRoIGhlbHAgZnJvbSB0aGUgZHJhZ29uLCBiZWZvcmUgc2hlIGdvZXMgb3ZlciBhIHdhdGVyZmFsbCBvbiBhIHJhZnQuIFRoaXMgZW50cnkgaXMgZm9yIHRoZSAyLUQgdmVyc2lvbiByZWxlYXNlZCBvbiwgZm9yIGV4YW1wbGUsIERWRCBhbmQgTmV0ZmxpeC4iLCJwb3B1bGFyaXR5IjoxNC41MDYsInBvc3Rlcl9wYXRoIjoiLzZ5eUdqSjBPZzlMck05WFEzNXF1SWhacFppUS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDA0LTA0LTAzIiwidGl0bGUiOiJUaGUgR2hvc3Qgb2YgTG9yZCBGYXJxdWFhZCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo1Ljk2NCwidm90ZV9jb3VudCI6MjM4fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii90anJLWlZ3UlY0MThnR3JLb2VuUmxOUE9BYk8uanBnIiwiZ2VucmVfaWRzIjpbMTgsMzZdLCJpZCI6ODQwMDk4LCJvcmlnaW5hbF9sYW5ndWFnZSI6Iml0Iiwib3JpZ2luYWxfdGl0bGUiOiJJbCBzaWdub3JlIGRlbGxlIGZvcm1pY2hlIiwib3ZlcnZpZXciOiJCYXNlZCBvbiB0cnVlIGV2ZW50cyBvZiB0aGUgbGF0ZSA2MHMgaW4gSXRhbHksIHBvZXQsIHBsYXl3cmlnaHQgYW5kIG15cm1lY29sb2dpc3QgQWxkbyBCcmFpYmFudGkgaXMgcHJvc2VjdXRlZCBhbmQgc2VudGVuY2VkIHRvIHByaXNvbiBmb3IgdGhlIGxvdmUgaGUgc2hhcmVzIHdpdGggaGlzIGJhcmVseS1vZi1hZ2UgcHVwaWwgYW5kIGZyaWVuZCwgRXR0b3JlLiBBbWlkc3QgYSBjaG9ydXMgb2Ygdm9pY2VzIG9mIGFjY3VzZXJzLCBzdXBwb3J0ZXJzIGFuZCBhIGxhcmdlbHkgaHlwb2NyaXRpY2FsIHB1YmxpYywgYSBzaW5nbGUgY29tbWl0dGVkIGpvdXJuYWxpc3QgdGFrZXMgb24gdGhlIHRhc2sgb2YgcGllY2luZyB0b2dldGhlciB0aGUgdHJ1dGgsIGJldHdlZW4gc2VjcmVjeSBhbmQgZGVzaXJlLCBmYWNpbmcgc3VzcGljaW9uIGFuZCBjZW5zb3JzaGlwIGluIHRoZSBwcm9jZXNzLiIsInBvcHVsYXJpdHkiOjYuOTg1LCJwb3N0ZXJfcGF0aCI6Ii91UGYzandtNGhSUlhGeWFHWUdZUFpocERKZDMuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMi0wOS0wOCIsInRpdGxlIjoiTG9yZCBvZiB0aGUgQW50cyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjI2Niwidm90ZV9jb3VudCI6MTQxfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9JaGhBMThsdFZNa0J3Mk9NVGg1NU9jcGRPYy5qcGciLCJnZW5yZV9pZHMiOlsxMiwxOCw1M10sImlkIjoxMDg0Nywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiTG9yZCBvZiB0aGUgRmxpZXMiLCJvdmVydmlldyI6IldoZW4gdGhlaXIgcGxhbmUgY3Jhc2hlcywgMjUgc2Nob29sYm95cyBmaW5kIHRoZW1zZWx2ZXMgdHJhcHBlZCBvbiBhIHRyb3BpY2FsIGlzbGFuZCwgbWlsZXMgZnJvbSBjaXZpbGl6YXRpb24uIiwicG9wdWxhcml0eSI6MTQuOTksInBvc3Rlcl9wYXRoIjoiL3hoeFdzRmdCWXlEZlJXZk9oTTFPclY4OFFESi5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTkwLTAzLTE2IiwidGl0bGUiOiJMb3JkIG9mIHRoZSBGbGllcyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjMzLCJ2b3RlX2NvdW50Ijo0ODN9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2JleTZRQ1lGc0M3SUExZzBIR2RJNFpxWU5rbC5qcGciLCJnZW5yZV9pZHMiOlsxOCwyNyw1M10sImlkIjo5MjA0MjksIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBHcmVhdCBhbmQgVGVycmlibGUgRGF5IG9mIHRoZSBMb3JkIiwib3ZlcnZpZXciOiJPbiBNaWNoYWVsIGFuZCBHYWJieSdzIGZpcnN0IHJvbWFudGljIGdldC1hd2F5IHRoaW5ncyB0YWtlcyBhIHRlcnJpZnlpbmcgdHVybiB3aGVuIEdvZCBkZWxpdmVycyB1bnNldHRsaW5nIG5ld3MgdG8gR2FiYnkgYWZ0ZXIgdGFraW5nIG92ZXIgTWljaGFlbCdzIGJvZHkuIElzIE1pY2hhZWwgYSBtYW5pcHVsYXRpdmUgcHN5Y2hvcGF0aCBvciBjb3VsZCB0aGlzIHJlYWxseSBiZSBhIGRpcmVjdCBleHBlcmllbmNlIHdpdGggaGVyIGNyZWF0b3Igb2ZmZXJpbmcgYSBwYXRoIHRvIGV0ZXJuYWwgaGFwcGluZXNzPyIsInBvcHVsYXJpdHkiOjIuODUzLCJwb3N0ZXJfcGF0aCI6Ii82RXlFR0doa2FEWkxDanhSSVJvZVVtMjQ4RzguanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMS0xMi0yOCIsInRpdGxlIjoiVGhlIEdyZWF0IGFuZCBUZXJyaWJsZSBEYXkgb2YgdGhlIExvcmQiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ni40LCJ2b3RlX2NvdW50IjozMX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvb3hMd1Z1aU5jS0RoZ21hOWJ4eDRNdEhTM1FpLmpwZyIsImdlbnJlX2lkcyI6WzM1LDEwNzQ5LDE2XSwiaWQiOjk4NTQ1Nywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJqYSIsIm9yaWdpbmFsX3RpdGxlIjoiV29ya2luZyEhISBMb3JkIG9mIHRoZSBUYWthbmFzaGkiLCJvdmVydmlldyI6IlRoZSBsaWdodC1oZWFydGVkIFdvcmtpbmchISBmcmFuY2hpc2UgY29tZXMgdG8gYSBjbG9zZSBpbiB0aGlzIGZpbmFsIGVwaXNvZGUgb2YgdGhlIGNvbmNsdWRpbmcgc2Vhc29uLiBXaWxsIEFvaSBZYW1hZGEgZ2V0IHRoZSBjbG9zdXJlIHNoZSBzbyBkZXNwZXJhdGVseSBuZWVkcyB3aXRoIGhlciBkaXN0YW50IG1vdGhlcj8gV2lsbCB0aGUgcmVsYXRpb25zaGlwIGJldHdlZW4gWWFjaGl5byBUb2Rvcm9raSBhbmQgSnVuIFNhdG91IGNvbnRpbnVlIHRvIHJlbWFpbiBzdGFnbmFudCBhbmQgYXdrd2FyZD8gUGVyaGFwcyBldmVuIFNvdXRhIFRha2FuYXNoaSBhbmQgTWFoaXJ1IEluYW1pIHdpbGwgdGFrZSBhIHN0ZXAgZm9yd2FyZCBpbiBkZWVwZW5pbmcgdGhlaXIgZWNjZW50cmljIGZyaWVuZHNoaXAuIEFuZCBpbiB0aGUgZW5kLCBXYWduYXJpYSBSZXN0YXVyYW50IG1pZ2h0IGZpbmFsbHkgZ2V0IGEgbmV3IGNoaWVmISAgQmVhdXRpZnVsbHkgY29ubmVjdGVkLCBhbGwgdGhlc2UgZXZlbnRzIGludGVydHdpbmUgdG8gZ2l2ZSB0aGVzZSBjaGFyYWN0ZXJzIGEgZmluYWwgZW5kaW5nIHRvIHRoZWlyIHN0b3JpZXMuIiwicG9wdWxhcml0eSI6MS40LCJwb3N0ZXJfcGF0aCI6Ii9jM0RKT3Roa250YlFwajFRQnhKeEVJZXNWbW0uanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxNi0wMy0zMCIsInRpdGxlIjoiV29ya2luZyEhISBMb3JkIG9mIHRoZSBUYWthbmFzaGkiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6MC4wLCJ2b3RlX2NvdW50IjowfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii90RVpkanNMT2tBajlqMUs3QXpYTHlVQTlVQmYuanBnIiwiZ2VucmVfaWRzIjpbOTksMThdLCJpZCI6NTg1MzUzLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImRlIiwib3JpZ2luYWxfdGl0bGUiOiJMb3JkIG9mIHRoZSBUb3lzIiwib3ZlcnZpZXciOiJNYXggXCJBZGxlcnNzb25cIiBIZXJ6YmVyZywgMjAgeWVhcnMgb2YgYWdlLCBmcm9tIERyZXNkZW4gZGVjaWRlZCBub3QgdG8gc3BlbmQgaGlzIGxpZmUgd29ya2luZy4gRXZlciBzaW5jZSwgaGUgcmV2aWV3cyBrbml2ZXMgYW5kIG90aGVyIHByb2R1Y3RzLCB1bmJveGVzIGxpbWl0ZWQgZmFuIGVkaXRpb25zIG9mIG1haW5seSBnYW5nc3RhIHJhcCBhbGJ1bXMsIGdpdmVzIHRhbGtzIGFib3V0IGhpbXNlbGYsIGRyaW5rcywgc3dlYXJzIGFuZCBiYXdscyBpbiB0b3duLCBodW1pbGlhdGVzIG90aGVycywgY3JhY2tzIGJvcmRlcmxpbmUgam9rZXMgYW5kIGNyb3NzZXMgZXZlcnkgYm91bmRhcnkgaGUgc2VlcyAtIE1heCBpcyBhIFlvdVR1YmUgY3JlYXRvciBhbmQgbWFrZXMgYSBkZWNlbnQgbGl2aW5nIG9mZiBvZiBpdC4gTW9zdCBvZiBNYXgncyBmcmllbmRzIGhhdmUgdGhlaXIgb3duIGNoYW5uZWxzIG9uIFlvdVR1YmUsIHNvbWUgZXZlbiBxdWl0ZSBzdWNjZXNzZnVsbHkuIE1heCBhbmQgaGlzIGdhbmcgYXJlIGR1YmlvdXMgcm9sZSBtb2RlbHMgYnV0IHdpdGhvdXQgYSBkb3VidCwgdGhleSBhcmUgY2VsZWJyaXRpZXMgb2YgdGhlaXIgZ2VuZXJhdGlvbiBoYXZpbmcgbW9yZSB0aGFuIDMwMC4wMDAgYWN0aXZlIGZhbnMuIElzIE1heCBhIHZpb2xlbmNlLWdsb3JpZnlpbmcgaW5mbHVlbmNlciB3aXRoIGZhci1yaWdodCB0ZW5kZW5jaWVzIG9yIGEgdXN1YWwgYWRvbGVzY2VudCwganVzdCB0cnlpbmcgdG8gZmluZCBoaW1zZWxmIGFuZCBoYXBwZW5zIHRvIGJlIGJvcm4gaW50byBhIHRpbWUgd2hlcmUgdGhlIGxpbmVzIGJldHdlZW4gcHJpdmF0ZSBsaWZlIGFuZCBwdWJsaWMgc2VsZi1kaXNwbGF5IGFyZSBibHVycmluZz8gSGUgbWlnaHQgYmUgYm90aCwgcG9zc2libHkgd2l0aG91dCBiZWluZyBvdmVybHkgYXdhcmUgb2YgaXQuIiwicG9wdWxhcml0eSI6MC42LCJwb3N0ZXJfcGF0aCI6Ii9tVDN1azJ0SFgyQ1J5clhlQndtcHU0MWJjTXguanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxOS0wNS0yMyIsInRpdGxlIjoiTG9yZCBvZiB0aGUgVG95cyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo4LjUsInZvdGVfY291bnQiOjJ9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2ZaYjVpdHJlbmI1ZzBRVXNUZ29EUUtZdXRkMy5qcGciLCJnZW5yZV9pZHMiOlsxOCwyNyw1M10sImlkIjo2NzY4NDQsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZXMiLCJvcmlnaW5hbF90aXRsZSI6Ik1lbsOpbmRlejogZWwgZMOtYSBkZWwgU2XDsW9yIiwib3ZlcnZpZXciOiJJbiB0aGlzIGhvcnJvciBtb3ZpZSwgYSByZXRpcmVkIHByaWVzdCBoYXVudGVkIGJ5IGhpcyBzaW5zIGlzIHB1bGxlZCBiYWNrIGludG8gdGhlIGRhcmtuZXNzIHdoZW4gYSBmcmllbmQgYmVncyBoaW0gdG8gaGVscCBoaXMgcG9zc2Vzc2VkIGRhdWdodGVyLiIsInBvcHVsYXJpdHkiOjMuMjIxLCJwb3N0ZXJfcGF0aCI6Ii9iWlE4OFhGR0tUVHJPeWVXTTd3VktMVHVDMU4uanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMC0xMC0zMCIsInRpdGxlIjoiVGhlIERheSBvZiB0aGUgTG9yZCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo1LjkxNCwidm90ZV9jb3VudCI6MzV9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL25qTTBhRHpnWGU1Zm14VGQ5WXVxWEwzUkxTbi5qcGciLCJnZW5yZV9pZHMiOlsxMiwxOCwyOCwxMDc0OV0sImlkIjoxMTAwMiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiR3JleXN0b2tlOiBUaGUgTGVnZW5kIG9mIFRhcnphbiwgTG9yZCBvZiB0aGUgQXBlcyIsIm92ZXJ2aWV3IjoiQSBzaGlwcGluZyBkaXNhc3RlciBpbiB0aGUgMTl0aCBDZW50dXJ5IGhhcyBzdHJhbmRlZCBhIG1hbiBhbmQgd29tYW4gaW4gdGhlIHdpbGRzIG9mIEFmcmljYS4gVGhlIGxhZHkgaXMgcHJlZ25hbnQsIGFuZCBnaXZlcyBiaXJ0aCB0byBhIHNvbiBpbiB0aGVpciB0cmVlIGhvdXNlLiBTb29uIGFmdGVyLCBhIGZhbWlseSBvZiBhcGVzIHN0dW1ibGUgYWNyb3NzIHRoZSBob3VzZSBhbmQgaW4gdGhlIGVuc3VpbmcgcGFuaWMsIGJvdGggcGFyZW50cyBhcmUga2lsbGVkLiBBIGZlbWFsZSBhcGUgdGFrZXMgdGhlIHRpbnkgYm95IGFzIGEgcmVwbGFjZW1lbnQgZm9yIGhlciBvd24gZGVhZCBpbmZhbnQsIGFuZCByYWlzZXMgaGltIGFzIGhlciBzb24uIFR3ZW50eSB5ZWFycyBsYXRlciwgQ2FwdGFpbiBQaGlsbGlwcGUgRCdBcm5vdCBkaXNjb3ZlcnMgdGhlIG1hbiB3aG8gdGhpbmtzIGhlIGlzIGFuIGFwZS4gRXZpZGVuY2UgaW4gdGhlIHRyZWUgaG91c2UgbGVhZHMgaGltIHRvIGJlbGlldmUgdGhhdCBoZSBpcyB0aGUgZGlyZWN0IGRlc2NlbmRhbnQgb2YgdGhlIEVhcmwgb2YgR3JleXN0b2tlLCBhbmQgdGh1cyB0YWtlcyBpdCB1cG9uIGhpbXNlbGYgdG8gcmV0dXJuIHRoZSBtYW4gdG8gY2l2aWxpemF0aW9uLiIsInBvcHVsYXJpdHkiOjIwLjQ0NSwicG9zdGVyX3BhdGgiOiIvcmR0RUlkenFKVFZoU0xzanVSNFU5dDFLS3hwLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5ODQtMDMtMzAiLCJ0aXRsZSI6IkdyZXlzdG9rZTogVGhlIExlZ2VuZCBvZiBUYXJ6YW4sIExvcmQgb2YgdGhlIEFwZXMiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ni4zMzksInZvdGVfY291bnQiOjQxOX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvY3lRSzVJek1YRFVTOG84NEhZYlNJRlF0MVZ5LmpwZyIsImdlbnJlX2lkcyI6WzI4LDE2LDg3OF0sImlkIjozOTEwMiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJqYSIsIm9yaWdpbmFsX3RpdGxlIjoi44OJ44Op44K044Oz44Oc44O844Or44K844OD44OIIOi2heOCueODvOODkeODvOOCteOCpOODpOS6uuOBmOOCk+OBoOWtq+OBneOCk+aCn+OBlOepuuOBj+OBhiIsIm92ZXJ2aWV3IjoiQSBTdXBlciBOYW1la2lhbiBuYW1lZCBTbHVnIGNvbWVzIHRvIGludmFkZSBFYXJ0aC4gQnV0IHRoZSBaIFdhcnJpb3JzIGRvIHRoZWlyIGJlc3QgdG8gc3RvcCBTbHVnIGFuZCBoaXMgZ2FuZy4iLCJwb3B1bGFyaXR5Ijo0Mi4zNDIsInBvc3Rlcl9wYXRoIjoiLzFsbXdaVHNxd1R0dmQzbTYwcHlRZmhHTTJVdC5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTkxLTAzLTE5IiwidGl0bGUiOiJEcmFnb24gQmFsbCBaOiBMb3JkIFNsdWciLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ni40LCJ2b3RlX2NvdW50Ijo0NTN9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2NoRUlGSnBGUzhENnNyYnB0eHJnbTFlYnRXVC5qcGciLCJnZW5yZV9pZHMiOls1MywxMiwxOF0sImlkIjo5OTYwLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJMb3JkIG9mIHRoZSBGbGllcyIsIm92ZXJ2aWV3IjoiQW1pZHN0IGEgbnVjbGVhciB3YXIsIGEgcGxhbmUgY2FycnlpbmcgYSBncm91cCBvZiBzY2hvb2xib3lzIGNyYXNoIGxhbmRzIG9uIGEgZGVzZXJ0ZWQgaXNsYW5kLiBXaXRoIG5vIGFkdWx0IHN1cnZpdm9ycywgdGhlIGJveXMgYXJlIGZvcmNlZCB0byBmZW5kIGZvciB0aGVtc2VsdmVzLiBBdCBmaXJzdCB0aGV5IGNvb3BlcmF0ZSwgYnV0IHdoZW4gdGhleSBzcGxpdCBpbnRvIHR3byBzZXBhcmF0ZSBjYW1wcyAtLSBvbmUgbGVkIGJ5IHRoZSBwcmFnbWF0aWMgUmFscGggYW5kIHRoZSBvdGhlciBieSBtaWxpdGFyaXN0aWMgSmFjayAtLSB0aGVpciBzb2NpZXR5IGZhbGxzIGludG8gZGlzYXJyYXksIGxlYWRpbmcgdG8gYSBkaXN0dXJiaW5nIGV4YW1pbmF0aW9uIG9mIGh1bWFuIG5hdHVyZSBhbmQgYSBjaGlsbGluZyBjb25jbHVzaW9uLiIsInBvcHVsYXJpdHkiOjE0LjEwNiwicG9zdGVyX3BhdGgiOiIvYURGaGcxQzBPbFVacUs1czA5UTdRV2hFSURCLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5NjMtMDgtMTMiLCJ0aXRsZSI6IkxvcmQgb2YgdGhlIEZsaWVzIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuNjk5LCJ2b3RlX2NvdW50Ijo0NjJ9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOls5OSwxMDc3MF0sImlkIjo5ODc4NDcsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkVsZXBoYW50IC0gTG9yZCBvZiB0aGUgSnVuZ2xlIiwib3ZlcnZpZXciOiJHcmVhdCBoZXJkcyBvZiBBc2lhbiBlbGVwaGFudHMgb25jZSByb2FtZWQgZnJvbSBCYWdoZGFkIHRvIEJlaWppbmcuIE5vdyBvbmx5IHJlbW5hbnRzIG9mIHRoZXNlIG9uY2UgbWlnaHR5IGhlcmRzIHN1cnZpdmUsIHByb3RlY3RlZCB0b2RheSBieSB0aGUgSW5kaWFuIGdvdmVybm1lbnQuIEl0IGlzIGhlcmUgdGhhdCBmaWxtbWFrZXIgTmFyZXNoIEJlZGkgdHVybnMgaGlzIGNhbWVyYSwgY2FwdHVyaW5nIGFuIGludGltYXRlIHBvcnRyYWl0IG9mIHRoZWUgbGFyZ2VzdCBvZiBsYW5kIG1hbW1hbHMuIEFuIGFkdWx0IGVsZXBoYW50IGVhdHMgMzAwIHBvdW5kcyBvZiBncmVlbiBmb2RkZXIgYW5kIGRyaW5rcyA0MCBnYWxsb25zIG9mIHdhdGVyIGEgZGF5LiBUaGlzIGZpbG0gZm9sbG93cyB0aGVzZSBnZW50bGUgZ2lhbnRzIGFzIHRoZXkgZm9yYWdlIGFuZCBmZWVkLCB3YWxsb3cgaW4gd2F0ZXJpbmcgaG9sZXMsIGR1c3QgdGhlaXIgc2tpbiB3aXRoIGRpcnQsIGFuZCBjYXJlIGZvciB0aGVpciB5b3VuZy4iLCJwb3B1bGFyaXR5IjowLjYsInBvc3Rlcl9wYXRoIjpudWxsLCJyZWxlYXNlX2RhdGUiOiIxOTg3LTAxLTAxIiwidGl0bGUiOiJFbGVwaGFudDogTG9yZCBvZiB0aGUgSnVuZ2xlIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjAuMCwidm90ZV9jb3VudCI6MH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvajcyNGlhUVJuUVRheFo1ZE5Jc3ZZYUU0UlFvLmpwZyIsImdlbnJlX2lkcyI6WzM1LDE4LDEwNzQ5XSwiaWQiOjQ4MTMwLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJFZGdlcyBvZiB0aGUgTG9yZCIsIm92ZXJ2aWV3IjoiQSAxMi15ZWFyLW9sZCBKZXdpc2ggYm95IGhpZGVzIHdpdGggYSBmYW1pbHkgb2YgQ2F0aG9saWMgcGVhc2FudCBmYXJtZXJzIHRvIGVzY2FwZSB0aGUgTmF6aXMuIiwicG9wdWxhcml0eSI6Ny4zMDksInBvc3Rlcl9wYXRoIjoiL3RvSElzWHF4YUx1cXlUQklmenNxb1BLaWJaTy5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDAxLTEwLTEyIiwidGl0bGUiOiJFZGdlcyBvZiB0aGUgTG9yZCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjU3Nywidm90ZV9jb3VudCI6Nzh9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2hjWXZRQjhnM0JpU2JLQ2xTdWFueXEwYVpyWi5qcGciLCJnZW5yZV9pZHMiOlsyNyw4NzgsMjhdLCJpZCI6MTYxMzksIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlBoYW50YXNtIElJSTogTG9yZCBvZiB0aGUgRGVhZCIsIm92ZXJ2aWV3IjoiVGhlIFRhbGwgTWFuLCB0aGF0IGltcG9zaW5nIG1lbmFjZSBmcm9tIE1vcm5pbmdzaWRlIE1vcnR1YXJ5LCBpcyBiYWNrIGFuZCBvbmNlIGFnYWluIGhhdW50aW5nIHRoZSB0aG91Z2h0cyBvZiB0aGUgbm93LWFkdWx0IE1pa2UgYW5kIGhpcyBmcmllbmQsIGV4LUljZSBDcmVhbSB2ZW5kb3IgUmVnZ2llLiBUaGUgdHdvIGNvbnRpbnVlIHRoZWlyIGh1bnQgZm9yIHRoZSBteXN0ZXJpb3VzIGZpZ3VyZSBhbmQgaW4gaGlzIHBhdGggb2YgZGVzdHJ1Y3Rpb24gZW5jb3VudGVyIGEgdmFyaWV0eSBvZiBkYW5nZXJvdXMgc2l0dWF0aW9ucywgZnJpZW5kcyBhbmQgZW5lbWllcy4iLCJwb3B1bGFyaXR5Ijo5LjMxMiwicG9zdGVyX3BhdGgiOiIvMlBzQ2M1dEZKc3NEZGhsYUltbXRYcFdCZ01FLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5OTQtMDUtMDYiLCJ0aXRsZSI6IlBoYW50YXNtIElJSTogTG9yZCBvZiB0aGUgRGVhZCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo1LjcyNywidm90ZV9jb3VudCI6MjA1fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii8ySGJzakR0dkVvdng3WUY0M25UZ0dtWGNLR08uanBnIiwiZ2VucmVfaWRzIjpbMTIsMTQsMzddLCJpZCI6NTQzMTAsIm9yaWdpbmFsX2xhbmd1YWdlIjoiaXQiLCJvcmlnaW5hbF90aXRsZSI6IlRleCBlIGlsIHNpZ25vcmUgZGVnbGkgYWJpc3NpIiwib3ZlcnZpZXciOiJCYXNlZCBvbiB0aGUgYWR2ZW50dXJlcyBvZiB0aGUgaGVybyBUZXggZnJvbSB0aGUgY29taWMgc3RyaXAgYnkgQm9uZWxsaS4gQW4gaW50ZXJlc3Rpbmcgc3BhZ2hldHRpLXdlc3Rlcm4vZmFudGFzeSBtb3ZpZSB0aGF0IGJsZW5kcyBtYWdpYyBhbmQgbXl0aG9sb2d5IHdpdGggc2l4LWd1bnMgYW5kIHN0YWdlY29hY2hlcy4iLCJwb3B1bGFyaXR5Ijo1LjI3MiwicG9zdGVyX3BhdGgiOiIvOGpUcFlUYUVRYzVVcEFlR0s1RHp5aDV5YkdnLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5ODUtMDktMDYiLCJ0aXRsZSI6IlRleCBhbmQgdGhlIExvcmQgb2YgdGhlIERlZXAiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6My45LCJ2b3RlX2NvdW50IjoxMX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvNTF4RVhCMFBvaEx0bG55d1FSQ01jUWxuOGVlLmpwZyIsImdlbnJlX2lkcyI6WzEwNzQ5LDM2LDk5XSwiaWQiOjQ0NjM2OSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJpdCIsIm9yaWdpbmFsX3RpdGxlIjoiUmFmZmFlbGxvIC0gSWwgUHJpbmNpcGUgZGVsbGUgQXJ0aSIsIm92ZXJ2aWV3IjoiUmFwaGFlbDogVGhlIExvcmQgb2YgdGhlIEFydHMgaXMgYSBkb2N1bWVudGFyeSBhYm91dCB0aGUgMTV0aCBjZW50dXJ5IEl0YWxpYW4gUmVuYWlzc2FuY2UgcGFpbnRlciBSYXBoYWVsIFNhbnppby4iLCJwb3B1bGFyaXR5IjoxLjQ2MSwicG9zdGVyX3BhdGgiOiIvcU5adGpyTlFPU3hTS045bVNKQXRUdHNLc1ZqLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTctMDQtMDMiLCJ0aXRsZSI6IlJhcGhhZWw6IFRoZSBMb3JkIG9mIHRoZSBBcnRzIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcuNywidm90ZV9jb3VudCI6MTZ9XSwidG90YWxfcGFnZXMiOjE1LCJ0b3RhbF9yZXN1bHRzIjoyODh9
  recorded_at: Fri, 25 Aug 2023 23:55:07 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=api_key&query=Lord%20Of%20The
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.10
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 25 Aug 2023 23:42:41 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=26104
      X-Memc:
      - HIT
      X-Memc-Key:
      - 77d9b32d497735c612ff9334898c80a5
      X-Memc-Age:
      - '755'
      X-Memc-Expires:
      - '27980'
      Etag:
      - W/"bde8a5ceb9f8aaee4dfb2f995d1f33c2"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 470159401e48708f2988d81a8aaf6824.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - ATL58-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - 8pikWNhjA5SLu7KZ35YNcyfFjFHZYpNK0XUpnUtqp5F2XehSnpX8mg==
      Age:
      - '836'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 25 Aug 2023 23:56:37 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=api_key&query=Lord%20Of%20The
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.10
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 25 Aug 2023 23:42:41 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=26104
      X-Memc:
      - HIT
      X-Memc-Key:
      - 77d9b32d497735c612ff9334898c80a5
      X-Memc-Age:
      - '755'
      X-Memc-Expires:
      - '27980'
      Etag:
      - W/"bde8a5ceb9f8aaee4dfb2f995d1f33c2"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 57e3d5d3b005fa4d07716cb3ffc6ecc0.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - ATL58-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - 6g3sCyNK7zcSaym4vLjW4-z-NkAv6jKmU1jdga0mU0scFYTlaKxIdw==
      Age:
      - '917'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 25 Aug 2023 23:57:58 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=api_key&query=Lord%20Of%20The
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.10
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 25 Aug 2023 23:42:41 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=26104
      X-Memc:
      - HIT
      X-Memc-Key:
      - 77d9b32d497735c612ff9334898c80a5
      X-Memc-Age:
      - '755'
      X-Memc-Expires:
      - '27980'
      Etag:
      - W/"bde8a5ceb9f8aaee4dfb2f995d1f33c2"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 52cf696b7d467b009c1bb9273fc4081c.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - ATL58-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - eFn1aujbZmDvyVap9jsI5eMMySUbUgVaOJ_XqpQYQQRYEeYFvD3Lfw==
      Age:
      - '968'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 25 Aug 2023 23:58:49 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=api_key&query=Lord%20Of%20The
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.10
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 25 Aug 2023 23:42:41 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=26104
      X-Memc:
      - HIT
      X-Memc-Key:
      - 77d9b32d497735c612ff9334898c80a5
      X-Memc-Age:
      - '755'
      X-Memc-Expires:
      - '27980'
      Etag:
      - W/"bde8a5ceb9f8aaee4dfb2f995d1f33c2"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 8320be7308887c5e1b64ebd8be6b078e.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - ATL58-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - bwZdtpmXnLAsgsE_H8MBdgPkXV92OEd42eF57GRFtvUNKAvcp0BuPg==
      Age:
      - '1068'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 26 Aug 2023 00:00:29 GMT
recorded_with: VCR 6.2.0
